---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pithos
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pithos
  namespace: default
rules:
  - apiGroups:
      - ""
    verbs:
      - list
    resources:
      - nodes
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pithos
  namespace: default
rules:
  - apiGroups:
      - extensions
    resources:
      - podsecuritypolicies
    resourceNames:
      - privileged
    verbs:
      - use
  - apiGroups:
      -  ""
    verbs:
      - get
      - list
      - watch
    resources:
      - secrets
    resourceNames:
      - cluster-default-ssl
  - apiGroups:
      -  ""
    verbs:
      - get
      - list
      - watch
    resources:
      - configmaps
      - endpoints
      - events
      - pods
      - services
      - persistentvolumes
      - persistentvolumeclaims
  - apiGroups:
      - ""
    verbs:
      - create
    resources:
      - pods/exec
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pithos
  namespace: default
subjects:
  - kind: ServiceAccount
    name: pithos
    namespace: default
roleRef:
  kind: Role
  name: pithos
  apiGroup: rbac.authorization.k8s.io
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: pithos
  namespace: default
subjects:
  - kind: ServiceAccount
    name: pithos
    namespace: default
roleRef:
  kind: ClusterRole
  name: pithos
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: pithos
  namespace: default
  labels:
    app: pithos
    product: pithos
spec:
  type: ClusterIP
  ports:
    - port: 443
      targetPort: 18443
      name: https
  selector:
    app: pithos
    product: pithos
    pithos-role: pithos
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pithos
  namespace: default
  labels:
    app: pithos
    product: pithos
    pithos-role: pithos
spec:
  selector:
    matchLabels:
      app: pithos
      product: pithos
      pithos-role: pithos
      component: pithos
  replicas: 2
  template:
    metadata:
      labels:
        app: pithos
        product: pithos
        pithos-role: pithos
        component: pithos
    spec:
      serviceAccountName: pithos
      nodeSelector:
        pithos-role: node
      securityContext:
        # hardcoded pithos user ID in the docker container
        runAsUser: 1000
      containers:
      - image: pithos:latest
        name: pithos
        securityContext:
            runAsUser: 1000 # pithos needs rw access to the JRE cacerts file
        ports:
          - containerPort: 18080
            name: pithos
        volumeMounts:
          - name: pithos-cfg
            mountPath: /etc/pithos
          - name: cassandra-ssl
            mountPath: /etc/cassandra-ssl
        env:
          - name: CASSANDRA_CERT_FILE
            value: /etc/cassandra-ssl/cassandra-node.cer
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 120
          periodSeconds: 60
          # slightly higher than the timeout configured in pithos.conf
          # https://github.com/gravitational/pithos-app/blob/master/resources/pithos-cfg/config.yaml.template#L118
          # read-timeout-millis: 30000
          timeoutSeconds: 32
      - image: pithos-proxy:latest
        name: proxy
        securityContext:
            runAsUser: 101 # nginx user hard-coded in the container
        ports:
          - containerPort: 18443
            name: https
        volumeMounts:
          - name: cluster-default-ssl
            mountPath: /etc/cluster-ssl
      - image: pithos:latest
        name: utils
        command: ["/bin/bash", "-c", "--"]
        args: ["while true; do sleep 6000; done;"]
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: pithos-keys
                key: master.key
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: pithos-keys
                key: master.secret
          - name: ENDPOINT
            value: https://pithos.default.svc
        volumeMounts:
          - name: cluster-default-ssl
            mountPath: /etc/cluster-ssl
      - image: pithosctl:latest
        name: healthz
        command: ["/usr/bin/dumb-init", "--"]
        args: ["/usr/local/bin/pithosctl", "healthz"]
        env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: pithos-keys
                key: master.key
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: pithos-keys
                key: master.secret
      volumes:
        - name: pithos-cfg
          configMap:
            name: pithos-cfg
        - name: cluster-default-ssl
          secret:
            secretName: cluster-default-ssl
        - name: cassandra-ssl
          secret:
            secretName: cassandra-ssl
